{"version":3,"sources":["components/Head/Nav.js","components/Head/Slider.js","views/App.js","views/NotFound.js","serviceWorker.js","index.js","Router.js"],"names":["Nav","_useState","useState","_useState2","Object","slicedToArray","state","setState","react_default","a","createElement","className","onClick","concat","Carousel","class","lib_default","dots","infinite","speed","slidesToShow","slidesToScroll","arrows","fade","autoplay","autoplaySpeed","cssEase","App","NotFound","react_router_dom","to","Boolean","window","location","hostname","match","ReactDOM","render","react_router","_ref","exact","path","component","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4585642c.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nexport default function Nav() {\r\n    const [state, setState] = useState(false)\r\n\r\n    const showMenu = () => setState(!state)\r\n\r\n    return (\r\n        <nav>\r\n            <div className=\"container\">\r\n                <ul className=\"d-none d-md-flex justify-content-between align-items-center\">\r\n                    <li>Services</li>\r\n                    <li>About</li>\r\n                    <li className=\"logo\">Besoft</li>\r\n                    <li>Projects</li>\r\n                    <li>Contact</li>\r\n                </ul>\r\n                <div className=\"movil d-flex d-md-none justify-content-between align-items-center\">\r\n                    <div className=\"logo d-md-none\">\r\n                        Besoft\r\n                    </div>\r\n                    <div onClick={showMenu} className={`icono-menu d-md-none d-flex flex-column ${state ? 'active' : ''}`}>\r\n                        <span className=\"d-block\"></span>\r\n                        <span className=\"d-block align-self-end\"></span>\r\n                    </div>\r\n                </div>\r\n                <div className={`slide d-none d-md-none ${state ? 'active d-flex align-items-center justify-content-end' : ''}`}>\r\n                    <ul className=\"d-flex flex-column align-items-end mr-4\">\r\n                        <li>Services</li>\r\n                        <li>About</li>\r\n                        <li>Projects</li>\r\n                        <li>Contact</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Slider from 'react-slick'\r\n\r\nexport default function Carousel() {\r\n    const settings = {\r\n        dots: false,\r\n        infinite: true,\r\n        speed: 500,\r\n        slidesToShow: 1,\r\n        slidesToScroll: 1,\r\n        arrows: false,\r\n        fade: true,\r\n        autoplay: true,\r\n        autoplaySpeed: 3000,\r\n        cssEase: 'linear'\r\n    };\r\n    return (\r\n        <div className=\"slider\">\r\n            <div className=\"container buttons d-flex\">\r\n                <div className=\"button active\">\r\n                    <i class=\"la la-code\"></i>\r\n                </div>\r\n                <div className=\"button\">\r\n                    <i class=\"la la-mobile-phone\"></i>\r\n                </div>\r\n                <div className=\"button\">\r\n                    <i class=\"la la-briefcase\"></i>\r\n                </div>\r\n                <div className=\"button\">\r\n                    <i class=\"la la-paint-brush\"></i>\r\n                </div>\r\n            </div>\r\n            <Slider {...settings} >\r\n                <div className=\"imagen\">\r\n                    <div className=\"filtro\">\r\n                        <div className=\"container\">\r\n                            <div className=\"row align-items-center\">\r\n                                <div className=\"col\">\r\n                                    <h1>Web & Mobile <span>Development</span></h1>\r\n                                    <p className=\"mt-2\">Applications for all devices and user experience</p>\r\n                                    <button className=\"btn transparent white mt-5\">Contact Us</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Slider>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react'\r\nimport Nav from '../components/Head/Nav'\r\nimport Slider from '../components/Head/Slider'\r\n\r\nconst App = () => (\r\n    <div>\r\n        <header>\r\n            <Nav />\r\n            <Slider />\r\n        </header>\r\n    </div>\r\n)\r\n\r\nexport default App","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nexport default () => (\r\n    <div>\r\n        <p className=\"number\">404</p>\r\n        <p className=\"description\">Pagina no encontrada</p>\r\n        <NavLink to={\"/\"}>\r\n            <button className=\"btn\">Ir a inicio</button>\r\n        </NavLink>\r\n    </div>\r\n)","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport 'bootstrap/dist/css/bootstrap-grid.min.css'\r\nimport './sass/line-awesome.min.css'\r\nimport './sass/index.sass'\r\nimport Router from './Router'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(<Router />, document.getElementById('root'))\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n","import React from 'react'\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\r\nimport App from './views/App'\r\nimport NotFound from './views/NotFound'\r\n\r\n\r\nexport default () => (\r\n  <BrowserRouter>\r\n    <Route render={({ location }) => (\r\n      <Switch location={ location }>\r\n        <Route exact path=\"/\" component={App} />\r\n        <Route component={NotFound} />\r\n      </Switch>\r\n    )} />\r\n  </BrowserRouter>\r\n)"],"sourceRoot":""}